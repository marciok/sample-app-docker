name: Build and Push Docker Image

on:
  pull_request:
    branches: 
      - master
    types: [opened, synchronize, reopened]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.REGISTRY_AUTH_TOKEN }}

    - name: Extract branch name
      id: extract_branch
      run: echo "deploy=${GITHUB_HEAD_REF}--${GITHUB_SHA}" >> $GITHUB_ENV
    - uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'URL to preview: http://${{ env.deploy }}.melhorbanco.digital'
          })   
    - name: Build and Push Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/sample-app-docker:${{ env.deploy }} .
        docker push ghcr.io/${{ github.repository_owner }}/sample-app-docker:${{ env.deploy }}
    - name: Checkout Infra Manifests
      uses: actions/checkout@v2
      with:
        repository: "marciok/pharrell-williams-manifests"
        ref: main
        token: ${{ secrets.MANIFESTS_REPO_TOKEN }}
    - name: Update Manifests
      uses: mikefarah/yq@master
      with:
        cmd: |
          mkdir manifests/overlay/${{ env.deploy }}
          APP_NAME_PLACEHOLDER="${{ env.deploy }}" yq '
            .patches[0].patch |= envsubst |
            .namePrefix |= envsubst |
            .labels[0].pairs.app |= envsubst |
            .images[0].newTag |= envsubst
          ' templates/app-kustomization.yml > manifests/overlay/${{ env.deploy }}/kustomization.yml
          yq '
            .[0].value.host = "${{ env.deploy }}.melhorbanco.digital" |
            .[0].value.http.paths[0].backend.service.name = "${{ env.deploy }}-service"
          ' templates/patch.yml > manifests/overlay/${{ env.deploy }}/patch.yml
          yq -i '.resources += "overlay/${{ env.deploy }}"' manifests/kustomization.yml
          yq -i '.patches += { "path": "overlay/${{ env.deploy }}/patch.yml", "target": { "kind": "Ingress", "name": "myapp-ingress" } }' manifests/kustomization.yml
    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "New preview: ${{ env.deploy }}"
        branch: main
    - name: Wait for preview to be ready
      run: |
        url="http://${{ env.deploy }}.melhorbanco.digital"
        max_attempts=60
        sleep 30
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          # Check if the host can be resolved
          nslookup_status=$(nslookup $(echo "$url" | awk -F/ '{print $3}') > /dev/null 2>&1; echo $?)
          if [ "$nslookup_status" -ne 0 ]; then
            echo "Attempt $attempt: Could not resolve host. Retrying in 20 seconds..."
          else
            # If the host is resolved, check the HTTP status code
            status_code=$(curl -o /dev/null -s -w "%{http_code}" "$url")
            if [ "$status_code" -eq 200 ]; then
              echo "URL returned 200 status code."
              exit 0
            else:
              echo "Attempt $attempt: URL returned $status_code status code. Retrying in 20 seconds..."
            fi
          fi
          attempt=$((attempt+1))
          sleep 20
        done
        echo "URL did not resolve or return 200 status code after $max_attempts attempts."
        exit 1
